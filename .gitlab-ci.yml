stages:
  - build
  - test

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_TOKEN" $CI_REGISTRY
    - docker build --pull -t $CI_REGISTRY_IMAGE .
    - docker push $CI_REGISTRY_IMAGE

unit:
  stage: test
  image: microsoft/dotnet:latest
  script:
    - dotnet test ./Tests/UnitTests/UnitTests.fsproj

integration:
  stage: test
  image: docker
  services:
    - docker:dind
  script:
    - apk add --no-cache py-pip python-dev libffi-dev openssl-dev gcc libc-dev make
    - pip install docker-compose
    - docker-compose -f ./docker-compose.ci.yml run integration
